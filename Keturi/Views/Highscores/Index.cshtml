@using PagedList.Mvc
@*@model IEnumerable<Keturi.Models.Highscore>*@
@model PagedList.IPagedList<Keturi.Models.Highscore>
@using PagedList.Mvc

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "Highscores", FormMethod.Get))
{
    <p>
        Ieškoti pagal niką: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Ieškoti" />
    </p>
}

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Nickname", "Index", new { sortOrder = ViewBag.NicknameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Score", "Index", new { sortOrder = ViewBag.ScoreSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nickname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Score)
                </td>
                <td>
                    @if (this.User.IsInRole("Administrator"))
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID })
                        <br />
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    }
                </td>
            </tr>
        }

    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))